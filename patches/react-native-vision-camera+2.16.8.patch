diff --git a/node_modules/react-native-vision-camera/android/CMakeLists.txt b/node_modules/react-native-vision-camera/android/CMakeLists.txt
index db25ea7..8a5c2f4 100644
--- a/node_modules/react-native-vision-camera/android/CMakeLists.txt
+++ b/node_modules/react-native-vision-camera/android/CMakeLists.txt
@@ -207,6 +207,18 @@ endif()

 find_package(react-native-reanimated REQUIRED CONFIG)

+# Find and link worklets library for Reanimated 3.15+
+set(WORKLETS_LIB_PATH "${NODE_MODULES_DIR}/react-native-reanimated/android/build/intermediates/library_jni/debug/jni/${ANDROID_ABI}/libworklets.so")
+if(EXISTS ${WORKLETS_LIB_PATH})
+    message(STATUS "VisionCamera: Found worklets library at ${WORKLETS_LIB_PATH}")
+    add_library(worklets SHARED IMPORTED)
+    set_target_properties(worklets PROPERTIES IMPORTED_LOCATION ${WORKLETS_LIB_PATH})
+    set(WORKLETS_LIB worklets)
+else()
+    message(STATUS "VisionCamera: Worklets library not found, using fallback")
+    set(WORKLETS_LIB "")
+endif()
+
 find_library(
         LOG_LIB
         log
@@ -219,6 +231,7 @@ target_link_libraries(
         ${LOG_LIB}
         ${JSI_LIB}
         react-native-reanimated::reanimated
+        ${WORKLETS_LIB}
         ${REACT_NATIVE_JNI_LIB}
         ${FBJNI_LIB}
         ${FOLLY_LIB}
diff --git a/node_modules/react-native-vision-camera/android/build.gradle b/node_modules/react-native-vision-camera/android/build.gradle
index ddfa243..509c7e0 100644
--- a/node_modules/react-native-vision-camera/android/build.gradle
+++ b/node_modules/react-native-vision-camera/android/build.gradle
@@ -114,7 +114,7 @@ def resolveBuildType() {
 }

 // WorkletRuntime.h file only exists since Reanimated 3.5.0.
-def hasReanimated3 = file("${nodeModules}/react-native-reanimated/Common/cpp/ReanimatedRuntime/WorkletRuntime.h").exists()
+def hasReanimated3 = file("${nodeModules}/react-native-reanimated/Common/cpp/worklets/WorkletRuntime/WorkletRuntime.h").exists()
 def disableFrameProcessors = rootProject.ext.has("disableFrameProcessors") ? rootProject.ext.get("disableFrameProcessors").asBoolean() : false
 def ENABLE_FRAME_PROCESSORS = hasReanimated3 && !disableFrameProcessors

@@ -334,13 +334,13 @@ if (ENABLE_FRAME_PROCESSORS) {
   def thirdPartyVersions = new Properties()
   thirdPartyVersions.load(new FileInputStream(thirdPartyVersionsFile))

-  def BOOST_VERSION = thirdPartyVersions["BOOST_VERSION"]
+  def BOOST_VERSION = thirdPartyVersions["BOOST_VERSION"] ?: "1_83_0"
   def boost_file = new File(downloadsDir, "boost_${BOOST_VERSION}.tar.gz")
-  def DOUBLE_CONVERSION_VERSION = thirdPartyVersions["DOUBLE_CONVERSION_VERSION"]
+  def DOUBLE_CONVERSION_VERSION = thirdPartyVersions["DOUBLE_CONVERSION_VERSION"] ?: "1.1.6"
   def double_conversion_file = new File(downloadsDir, "double-conversion-${DOUBLE_CONVERSION_VERSION}.tar.gz")
-  def FOLLY_VERSION = thirdPartyVersions["FOLLY_VERSION"]
+  def FOLLY_VERSION = thirdPartyVersions["FOLLY_VERSION"] ?: "2021.07.22.00"
   def folly_file = new File(downloadsDir, "folly-${FOLLY_VERSION}.tar.gz")
-  def GLOG_VERSION = thirdPartyVersions["GLOG_VERSION"]
+  def GLOG_VERSION = thirdPartyVersions["GLOG_VERSION"] ?: "0.3.5"
   def glog_file = new File(downloadsDir, "glog-${GLOG_VERSION}.tar.gz")

   task createNativeDepsDirectories {
diff --git a/node_modules/react-native-vision-camera/android/src/main/cpp/FrameProcessorRuntimeManager.cpp b/node_modules/react-native-vision-camera/android/src/main/cpp/FrameProcessorRuntimeManager.cpp
index 89ddf95..29670a7 100644
--- a/node_modules/react-native-vision-camera/android/src/main/cpp/FrameProcessorRuntimeManager.cpp
+++ b/node_modules/react-native-vision-camera/android/src/main/cpp/FrameProcessorRuntimeManager.cpp
@@ -14,6 +14,7 @@
 #include "VisionCameraScheduler.h"
 #include "java-bindings/JImageProxy.h"
 #include "java-bindings/JFrameProcessorPlugin.h"
+#include <Shareables.h>

 namespace vision {

@@ -115,7 +116,7 @@ void FrameProcessorRuntimeManager::setFrameProcessor(jsi::Runtime& rnRuntime,
   // convert jsi::Function to a ShareableValue (can be shared across runtimes)
   __android_log_write(ANDROID_LOG_INFO, TAG,
                       "Adapting Shareable value from function (conversion to worklet)...");
-  auto shareableWorklet = reanimated::extractShareableOrThrow<reanimated::ShareableWorklet>(rnRuntime, frameProcessor);
+  auto shareableWorklet = reanimated::extractShareableOrThrow<reanimated::ShareableWorklet>(rnRuntime, frameProcessor, "[Reanimated] Frame processor must be a worklet function");
   __android_log_write(ANDROID_LOG_INFO, TAG, "Successfully created worklet!");

   scheduler_->scheduleOnUI([=]() {
diff --git a/node_modules/react-native-vision-camera/android/src/main/cpp/FrameProcessorRuntimeManager.h b/node_modules/react-native-vision-camera/android/src/main/cpp/FrameProcessorRuntimeManager.h
index cd66f76..c22f438 100644
--- a/node_modules/react-native-vision-camera/android/src/main/cpp/FrameProcessorRuntimeManager.h
+++ b/node_modules/react-native-vision-camera/android/src/main/cpp/FrameProcessorRuntimeManager.h
@@ -10,7 +10,7 @@
 #include <memory>
 #include <string>

-#include "WorkletRuntime.h"
+#include <WorkletRuntime.h>

 #include "CameraView.h"
 #include "VisionCameraScheduler.h"
